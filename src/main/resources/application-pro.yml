spring:
  # 数据库配置
  datasource:
    mydata:
      driverClassName: com.mysql.jdbc.Driver
      name: mydata
      url: jdbc:mysql://192.168.195.143:3306/test?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull&amp;tinyInt1isBit=false&amp;useSSL=false
      username: root
      password: tiger
    druid:
      # 数据源类型：Druid
      type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 1000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 1
      validationQueryTimeout: 10000
      testWhileIdle: true
      testOnBorrow: true
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
  # html页面访问
  thymeleaf:
    cache: false
    prefix: classpath:/templates
    check-template-location: true
    suffix: .html
    encoding: UTF-8
    mode: LEGACYHTML5
  #静态资源文件
  mvc:
    static-path-pattern: /static/**
  redis:
    # redis数据库索引（默认为0）
    database: 0
    # redis服务器地址（默认为localhost）
    host: 127.0.0.1
    # redis端口（默认为6379）
    port: 6379
    # redis访问密码（默认为空）
    password: